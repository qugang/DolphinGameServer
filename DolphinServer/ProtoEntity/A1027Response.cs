// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: A1027Response.txt
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.ProtocolBuffers;
using pbc = global::Google.ProtocolBuffers.Collections;
using pbd = global::Google.ProtocolBuffers.Descriptors;
using scg = global::System.Collections.Generic;
namespace DolphinServer.ProtoEntity {

  namespace Proto {

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public static partial class A1027Response {

      #region Extension registration
      public static void RegisterAllExtensions(pb::ExtensionRegistry registry) {
      }
      #endregion
      #region Static variables
      internal static pbd::MessageDescriptor internal__static_A1027Response__Descriptor;
      internal static pb::FieldAccess.FieldAccessorTable<global::DolphinServer.ProtoEntity.A1027Response, global::DolphinServer.ProtoEntity.A1027Response.Builder> internal__static_A1027Response__FieldAccessorTable;
      internal static pbd::MessageDescriptor internal__static_A1027GameUser__Descriptor;
      internal static pb::FieldAccess.FieldAccessorTable<global::DolphinServer.ProtoEntity.A1027GameUser, global::DolphinServer.ProtoEntity.A1027GameUser.Builder> internal__static_A1027GameUser__FieldAccessorTable;
      internal static pbd::MessageDescriptor internal__static_A1027CmdList__Descriptor;
      internal static pb::FieldAccess.FieldAccessorTable<global::DolphinServer.ProtoEntity.A1027CmdList, global::DolphinServer.ProtoEntity.A1027CmdList.Builder> internal__static_A1027CmdList__FieldAccessorTable;
      #endregion
      #region Descriptor
      public static pbd::FileDescriptor Descriptor {
        get { return descriptor; }
      }
      private static pbd::FileDescriptor descriptor;

      static A1027Response() {
        byte[] descriptorData = global::System.Convert.FromBase64String(
            string.Concat(
              "ChFBMTAyN1Jlc3BvbnNlLnR4dCJ3Cg1BMTAyN1Jlc3BvbnNlEhEKCUVycm9y", 
              "SW5mbxgBIAEoCRIRCglFcnJvckNvZGUYAiABKAUSIAoIR2FtZVVzZXIYAyAD", 
              "KAsyDi5BMTAyN0dhbWVVc2VyEh4KB0NtZExpc3QYBCADKAsyDS5BMTAyN0Nt", 
              "ZExpc3QiWAoNQTEwMjdHYW1lVXNlchILCgNVaWQYASABKAkSEAoISGF0SW1h", 
              "Z2UYAiABKAkSCwoDU2V4GAMgASgFEgwKBE5hbWUYBCABKAkSDQoFQ2FyZHMY", 
              "BSADKAUiZgoMQTEwMjdDbWRMaXN0EgsKA1VpZBgBIAEoCRINCgVBVHlwZRgC", 
              "IAEoBRIMCgRDYXJkGAMgASgFEg0KBUNhcmQxGAQgASgFEg0KBUNhcmQyGAUg", 
              "ASgFEg4KBkh1VHlwZRgGIAEoBUIcqgIZRG9scGhpblNlcnZlci5Qcm90b0Vu", 
            "dGl0eQ=="));
        pbd::FileDescriptor.InternalDescriptorAssigner assigner = delegate(pbd::FileDescriptor root) {
          descriptor = root;
          internal__static_A1027Response__Descriptor = Descriptor.MessageTypes[0];
          internal__static_A1027Response__FieldAccessorTable = 
              new pb::FieldAccess.FieldAccessorTable<global::DolphinServer.ProtoEntity.A1027Response, global::DolphinServer.ProtoEntity.A1027Response.Builder>(internal__static_A1027Response__Descriptor,
                  new string[] { "ErrorInfo", "ErrorCode", "GameUser", "CmdList", });
          internal__static_A1027GameUser__Descriptor = Descriptor.MessageTypes[1];
          internal__static_A1027GameUser__FieldAccessorTable = 
              new pb::FieldAccess.FieldAccessorTable<global::DolphinServer.ProtoEntity.A1027GameUser, global::DolphinServer.ProtoEntity.A1027GameUser.Builder>(internal__static_A1027GameUser__Descriptor,
                  new string[] { "Uid", "HatImage", "Sex", "Name", "Cards", });
          internal__static_A1027CmdList__Descriptor = Descriptor.MessageTypes[2];
          internal__static_A1027CmdList__FieldAccessorTable = 
              new pb::FieldAccess.FieldAccessorTable<global::DolphinServer.ProtoEntity.A1027CmdList, global::DolphinServer.ProtoEntity.A1027CmdList.Builder>(internal__static_A1027CmdList__Descriptor,
                  new string[] { "Uid", "AType", "Card", "Card1", "Card2", "HuType", });
          pb::ExtensionRegistry registry = pb::ExtensionRegistry.CreateInstance();
          RegisterAllExtensions(registry);
          return registry;
        };
        pbd::FileDescriptor.InternalBuildGeneratedFileFrom(descriptorData,
            new pbd::FileDescriptor[] {
            }, assigner);
      }
      #endregion

    }
  }
  #region Messages
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class A1027Response : pb::GeneratedMessage<A1027Response, A1027Response.Builder> {
    private A1027Response() { }
    private static readonly A1027Response defaultInstance = new A1027Response().MakeReadOnly();
    private static readonly string[] _a1027ResponseFieldNames = new string[] { "CmdList", "ErrorCode", "ErrorInfo", "GameUser" };
    private static readonly uint[] _a1027ResponseFieldTags = new uint[] { 34, 16, 10, 26 };
    public static A1027Response DefaultInstance {
      get { return defaultInstance; }
    }

    public override A1027Response DefaultInstanceForType {
      get { return DefaultInstance; }
    }

    protected override A1027Response ThisMessage {
      get { return this; }
    }

    public static pbd::MessageDescriptor Descriptor {
      get { return global::DolphinServer.ProtoEntity.Proto.A1027Response.internal__static_A1027Response__Descriptor; }
    }

    protected override pb::FieldAccess.FieldAccessorTable<A1027Response, A1027Response.Builder> InternalFieldAccessors {
      get { return global::DolphinServer.ProtoEntity.Proto.A1027Response.internal__static_A1027Response__FieldAccessorTable; }
    }

    public const int ErrorInfoFieldNumber = 1;
    private bool hasErrorInfo;
    private string errorInfo_ = "";
    public bool HasErrorInfo {
      get { return hasErrorInfo; }
    }
    public string ErrorInfo {
      get { return errorInfo_; }
    }

    public const int ErrorCodeFieldNumber = 2;
    private bool hasErrorCode;
    private int errorCode_;
    public bool HasErrorCode {
      get { return hasErrorCode; }
    }
    public int ErrorCode {
      get { return errorCode_; }
    }

    public const int GameUserFieldNumber = 3;
    private pbc::PopsicleList<global::DolphinServer.ProtoEntity.A1027GameUser> gameUser_ = new pbc::PopsicleList<global::DolphinServer.ProtoEntity.A1027GameUser>();
    public scg::IList<global::DolphinServer.ProtoEntity.A1027GameUser> GameUserList {
      get { return gameUser_; }
    }
    public int GameUserCount {
      get { return gameUser_.Count; }
    }
    public global::DolphinServer.ProtoEntity.A1027GameUser GetGameUser(int index) {
      return gameUser_[index];
    }

    public const int CmdListFieldNumber = 4;
    private pbc::PopsicleList<global::DolphinServer.ProtoEntity.A1027CmdList> cmdList_ = new pbc::PopsicleList<global::DolphinServer.ProtoEntity.A1027CmdList>();
    public scg::IList<global::DolphinServer.ProtoEntity.A1027CmdList> CmdListList {
      get { return cmdList_; }
    }
    public int CmdListCount {
      get { return cmdList_.Count; }
    }
    public global::DolphinServer.ProtoEntity.A1027CmdList GetCmdList(int index) {
      return cmdList_[index];
    }

    public override bool IsInitialized {
      get {
        return true;
      }
    }

    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _a1027ResponseFieldNames;
      if (hasErrorInfo) {
        output.WriteString(1, field_names[2], ErrorInfo);
      }
      if (hasErrorCode) {
        output.WriteInt32(2, field_names[1], ErrorCode);
      }
      if (gameUser_.Count > 0) {
        output.WriteMessageArray(3, field_names[3], gameUser_);
      }
      if (cmdList_.Count > 0) {
        output.WriteMessageArray(4, field_names[0], cmdList_);
      }
      UnknownFields.WriteTo(output);
    }

    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }

    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (hasErrorInfo) {
        size += pb::CodedOutputStream.ComputeStringSize(1, ErrorInfo);
      }
      if (hasErrorCode) {
        size += pb::CodedOutputStream.ComputeInt32Size(2, ErrorCode);
      }
      foreach (global::DolphinServer.ProtoEntity.A1027GameUser element in GameUserList) {
        size += pb::CodedOutputStream.ComputeMessageSize(3, element);
      }
      foreach (global::DolphinServer.ProtoEntity.A1027CmdList element in CmdListList) {
        size += pb::CodedOutputStream.ComputeMessageSize(4, element);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static A1027Response ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static A1027Response ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static A1027Response ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static A1027Response ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static A1027Response ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static A1027Response ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static A1027Response ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static A1027Response ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static A1027Response ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static A1027Response ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private A1027Response MakeReadOnly() {
      gameUser_.MakeReadOnly();
      cmdList_.MakeReadOnly();
      return this;
    }

    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(A1027Response prototype) {
      return new Builder(prototype);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<A1027Response, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(A1027Response cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }

      private bool resultIsReadOnly;
      private A1027Response result;

      private A1027Response PrepareBuilder() {
        if (resultIsReadOnly) {
          A1027Response original = result;
          result = new A1027Response();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }

      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }

      protected override A1027Response MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }

      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }

      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }

      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::DolphinServer.ProtoEntity.A1027Response.Descriptor; }
      }

      public override A1027Response DefaultInstanceForType {
        get { return global::DolphinServer.ProtoEntity.A1027Response.DefaultInstance; }
      }

      public override A1027Response BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }

      public override Builder MergeFrom(pb::IMessage other) {
        if (other is A1027Response) {
          return MergeFrom((A1027Response) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }

      public override Builder MergeFrom(A1027Response other) {
        if (other == global::DolphinServer.ProtoEntity.A1027Response.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasErrorInfo) {
          ErrorInfo = other.ErrorInfo;
        }
        if (other.HasErrorCode) {
          ErrorCode = other.ErrorCode;
        }
        if (other.gameUser_.Count != 0) {
          result.gameUser_.Add(other.gameUser_);
        }
        if (other.cmdList_.Count != 0) {
          result.cmdList_.Add(other.cmdList_);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }

      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }

      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_a1027ResponseFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _a1027ResponseFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              result.hasErrorInfo = input.ReadString(ref result.errorInfo_);
              break;
            }
            case 16: {
              result.hasErrorCode = input.ReadInt32(ref result.errorCode_);
              break;
            }
            case 26: {
              input.ReadMessageArray(tag, field_name, result.gameUser_, global::DolphinServer.ProtoEntity.A1027GameUser.DefaultInstance, extensionRegistry);
              break;
            }
            case 34: {
              input.ReadMessageArray(tag, field_name, result.cmdList_, global::DolphinServer.ProtoEntity.A1027CmdList.DefaultInstance, extensionRegistry);
              break;
            }
          }
        }

        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }


      public bool HasErrorInfo {
        get { return result.hasErrorInfo; }
      }
      public string ErrorInfo {
        get { return result.ErrorInfo; }
        set { SetErrorInfo(value); }
      }
      public Builder SetErrorInfo(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasErrorInfo = true;
        result.errorInfo_ = value;
        return this;
      }
      public Builder ClearErrorInfo() {
        PrepareBuilder();
        result.hasErrorInfo = false;
        result.errorInfo_ = "";
        return this;
      }

      public bool HasErrorCode {
        get { return result.hasErrorCode; }
      }
      public int ErrorCode {
        get { return result.ErrorCode; }
        set { SetErrorCode(value); }
      }
      public Builder SetErrorCode(int value) {
        PrepareBuilder();
        result.hasErrorCode = true;
        result.errorCode_ = value;
        return this;
      }
      public Builder ClearErrorCode() {
        PrepareBuilder();
        result.hasErrorCode = false;
        result.errorCode_ = 0;
        return this;
      }

      public pbc::IPopsicleList<global::DolphinServer.ProtoEntity.A1027GameUser> GameUserList {
        get { return PrepareBuilder().gameUser_; }
      }
      public int GameUserCount {
        get { return result.GameUserCount; }
      }
      public global::DolphinServer.ProtoEntity.A1027GameUser GetGameUser(int index) {
        return result.GetGameUser(index);
      }
      public Builder SetGameUser(int index, global::DolphinServer.ProtoEntity.A1027GameUser value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.gameUser_[index] = value;
        return this;
      }
      public Builder SetGameUser(int index, global::DolphinServer.ProtoEntity.A1027GameUser.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.gameUser_[index] = builderForValue.Build();
        return this;
      }
      public Builder AddGameUser(global::DolphinServer.ProtoEntity.A1027GameUser value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.gameUser_.Add(value);
        return this;
      }
      public Builder AddGameUser(global::DolphinServer.ProtoEntity.A1027GameUser.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.gameUser_.Add(builderForValue.Build());
        return this;
      }
      public Builder AddRangeGameUser(scg::IEnumerable<global::DolphinServer.ProtoEntity.A1027GameUser> values) {
        PrepareBuilder();
        result.gameUser_.Add(values);
        return this;
      }
      public Builder ClearGameUser() {
        PrepareBuilder();
        result.gameUser_.Clear();
        return this;
      }

      public pbc::IPopsicleList<global::DolphinServer.ProtoEntity.A1027CmdList> CmdListList {
        get { return PrepareBuilder().cmdList_; }
      }
      public int CmdListCount {
        get { return result.CmdListCount; }
      }
      public global::DolphinServer.ProtoEntity.A1027CmdList GetCmdList(int index) {
        return result.GetCmdList(index);
      }
      public Builder SetCmdList(int index, global::DolphinServer.ProtoEntity.A1027CmdList value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.cmdList_[index] = value;
        return this;
      }
      public Builder SetCmdList(int index, global::DolphinServer.ProtoEntity.A1027CmdList.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.cmdList_[index] = builderForValue.Build();
        return this;
      }
      public Builder AddCmdList(global::DolphinServer.ProtoEntity.A1027CmdList value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.cmdList_.Add(value);
        return this;
      }
      public Builder AddCmdList(global::DolphinServer.ProtoEntity.A1027CmdList.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.cmdList_.Add(builderForValue.Build());
        return this;
      }
      public Builder AddRangeCmdList(scg::IEnumerable<global::DolphinServer.ProtoEntity.A1027CmdList> values) {
        PrepareBuilder();
        result.cmdList_.Add(values);
        return this;
      }
      public Builder ClearCmdList() {
        PrepareBuilder();
        result.cmdList_.Clear();
        return this;
      }
    }
    static A1027Response() {
      object.ReferenceEquals(global::DolphinServer.ProtoEntity.Proto.A1027Response.Descriptor, null);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class A1027GameUser : pb::GeneratedMessage<A1027GameUser, A1027GameUser.Builder> {
    private A1027GameUser() { }
    private static readonly A1027GameUser defaultInstance = new A1027GameUser().MakeReadOnly();
    private static readonly string[] _a1027GameUserFieldNames = new string[] { "Cards", "HatImage", "Name", "Sex", "Uid" };
    private static readonly uint[] _a1027GameUserFieldTags = new uint[] { 40, 18, 34, 24, 10 };
    public static A1027GameUser DefaultInstance {
      get { return defaultInstance; }
    }

    public override A1027GameUser DefaultInstanceForType {
      get { return DefaultInstance; }
    }

    protected override A1027GameUser ThisMessage {
      get { return this; }
    }

    public static pbd::MessageDescriptor Descriptor {
      get { return global::DolphinServer.ProtoEntity.Proto.A1027Response.internal__static_A1027GameUser__Descriptor; }
    }

    protected override pb::FieldAccess.FieldAccessorTable<A1027GameUser, A1027GameUser.Builder> InternalFieldAccessors {
      get { return global::DolphinServer.ProtoEntity.Proto.A1027Response.internal__static_A1027GameUser__FieldAccessorTable; }
    }

    public const int UidFieldNumber = 1;
    private bool hasUid;
    private string uid_ = "";
    public bool HasUid {
      get { return hasUid; }
    }
    public string Uid {
      get { return uid_; }
    }

    public const int HatImageFieldNumber = 2;
    private bool hasHatImage;
    private string hatImage_ = "";
    public bool HasHatImage {
      get { return hasHatImage; }
    }
    public string HatImage {
      get { return hatImage_; }
    }

    public const int SexFieldNumber = 3;
    private bool hasSex;
    private int sex_;
    public bool HasSex {
      get { return hasSex; }
    }
    public int Sex {
      get { return sex_; }
    }

    public const int NameFieldNumber = 4;
    private bool hasName;
    private string name_ = "";
    public bool HasName {
      get { return hasName; }
    }
    public string Name {
      get { return name_; }
    }

    public const int CardsFieldNumber = 5;
    private pbc::PopsicleList<int> cards_ = new pbc::PopsicleList<int>();
    public scg::IList<int> CardsList {
      get { return pbc::Lists.AsReadOnly(cards_); }
    }
    public int CardsCount {
      get { return cards_.Count; }
    }
    public int GetCards(int index) {
      return cards_[index];
    }

    public override bool IsInitialized {
      get {
        return true;
      }
    }

    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _a1027GameUserFieldNames;
      if (hasUid) {
        output.WriteString(1, field_names[4], Uid);
      }
      if (hasHatImage) {
        output.WriteString(2, field_names[1], HatImage);
      }
      if (hasSex) {
        output.WriteInt32(3, field_names[3], Sex);
      }
      if (hasName) {
        output.WriteString(4, field_names[2], Name);
      }
      if (cards_.Count > 0) {
        output.WriteInt32Array(5, field_names[0], cards_);
      }
      UnknownFields.WriteTo(output);
    }

    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }

    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (hasUid) {
        size += pb::CodedOutputStream.ComputeStringSize(1, Uid);
      }
      if (hasHatImage) {
        size += pb::CodedOutputStream.ComputeStringSize(2, HatImage);
      }
      if (hasSex) {
        size += pb::CodedOutputStream.ComputeInt32Size(3, Sex);
      }
      if (hasName) {
        size += pb::CodedOutputStream.ComputeStringSize(4, Name);
      }
      {
        int dataSize = 0;
        foreach (int element in CardsList) {
          dataSize += pb::CodedOutputStream.ComputeInt32SizeNoTag(element);
        }
        size += dataSize;
        size += 1 * cards_.Count;
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static A1027GameUser ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static A1027GameUser ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static A1027GameUser ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static A1027GameUser ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static A1027GameUser ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static A1027GameUser ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static A1027GameUser ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static A1027GameUser ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static A1027GameUser ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static A1027GameUser ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private A1027GameUser MakeReadOnly() {
      cards_.MakeReadOnly();
      return this;
    }

    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(A1027GameUser prototype) {
      return new Builder(prototype);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<A1027GameUser, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(A1027GameUser cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }

      private bool resultIsReadOnly;
      private A1027GameUser result;

      private A1027GameUser PrepareBuilder() {
        if (resultIsReadOnly) {
          A1027GameUser original = result;
          result = new A1027GameUser();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }

      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }

      protected override A1027GameUser MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }

      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }

      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }

      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::DolphinServer.ProtoEntity.A1027GameUser.Descriptor; }
      }

      public override A1027GameUser DefaultInstanceForType {
        get { return global::DolphinServer.ProtoEntity.A1027GameUser.DefaultInstance; }
      }

      public override A1027GameUser BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }

      public override Builder MergeFrom(pb::IMessage other) {
        if (other is A1027GameUser) {
          return MergeFrom((A1027GameUser) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }

      public override Builder MergeFrom(A1027GameUser other) {
        if (other == global::DolphinServer.ProtoEntity.A1027GameUser.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasUid) {
          Uid = other.Uid;
        }
        if (other.HasHatImage) {
          HatImage = other.HatImage;
        }
        if (other.HasSex) {
          Sex = other.Sex;
        }
        if (other.HasName) {
          Name = other.Name;
        }
        if (other.cards_.Count != 0) {
          result.cards_.Add(other.cards_);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }

      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }

      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_a1027GameUserFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _a1027GameUserFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              result.hasUid = input.ReadString(ref result.uid_);
              break;
            }
            case 18: {
              result.hasHatImage = input.ReadString(ref result.hatImage_);
              break;
            }
            case 24: {
              result.hasSex = input.ReadInt32(ref result.sex_);
              break;
            }
            case 34: {
              result.hasName = input.ReadString(ref result.name_);
              break;
            }
            case 42:
            case 40: {
              input.ReadInt32Array(tag, field_name, result.cards_);
              break;
            }
          }
        }

        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }


      public bool HasUid {
        get { return result.hasUid; }
      }
      public string Uid {
        get { return result.Uid; }
        set { SetUid(value); }
      }
      public Builder SetUid(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasUid = true;
        result.uid_ = value;
        return this;
      }
      public Builder ClearUid() {
        PrepareBuilder();
        result.hasUid = false;
        result.uid_ = "";
        return this;
      }

      public bool HasHatImage {
        get { return result.hasHatImage; }
      }
      public string HatImage {
        get { return result.HatImage; }
        set { SetHatImage(value); }
      }
      public Builder SetHatImage(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasHatImage = true;
        result.hatImage_ = value;
        return this;
      }
      public Builder ClearHatImage() {
        PrepareBuilder();
        result.hasHatImage = false;
        result.hatImage_ = "";
        return this;
      }

      public bool HasSex {
        get { return result.hasSex; }
      }
      public int Sex {
        get { return result.Sex; }
        set { SetSex(value); }
      }
      public Builder SetSex(int value) {
        PrepareBuilder();
        result.hasSex = true;
        result.sex_ = value;
        return this;
      }
      public Builder ClearSex() {
        PrepareBuilder();
        result.hasSex = false;
        result.sex_ = 0;
        return this;
      }

      public bool HasName {
        get { return result.hasName; }
      }
      public string Name {
        get { return result.Name; }
        set { SetName(value); }
      }
      public Builder SetName(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasName = true;
        result.name_ = value;
        return this;
      }
      public Builder ClearName() {
        PrepareBuilder();
        result.hasName = false;
        result.name_ = "";
        return this;
      }

      public pbc::IPopsicleList<int> CardsList {
        get { return PrepareBuilder().cards_; }
      }
      public int CardsCount {
        get { return result.CardsCount; }
      }
      public int GetCards(int index) {
        return result.GetCards(index);
      }
      public Builder SetCards(int index, int value) {
        PrepareBuilder();
        result.cards_[index] = value;
        return this;
      }
      public Builder AddCards(int value) {
        PrepareBuilder();
        result.cards_.Add(value);
        return this;
      }
      public Builder AddRangeCards(scg::IEnumerable<int> values) {
        PrepareBuilder();
        result.cards_.Add(values);
        return this;
      }
      public Builder ClearCards() {
        PrepareBuilder();
        result.cards_.Clear();
        return this;
      }
    }
    static A1027GameUser() {
      object.ReferenceEquals(global::DolphinServer.ProtoEntity.Proto.A1027Response.Descriptor, null);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class A1027CmdList : pb::GeneratedMessage<A1027CmdList, A1027CmdList.Builder> {
    private A1027CmdList() { }
    private static readonly A1027CmdList defaultInstance = new A1027CmdList().MakeReadOnly();
    private static readonly string[] _a1027CmdListFieldNames = new string[] { "AType", "Card", "Card1", "Card2", "HuType", "Uid" };
    private static readonly uint[] _a1027CmdListFieldTags = new uint[] { 16, 24, 32, 40, 48, 10 };
    public static A1027CmdList DefaultInstance {
      get { return defaultInstance; }
    }

    public override A1027CmdList DefaultInstanceForType {
      get { return DefaultInstance; }
    }

    protected override A1027CmdList ThisMessage {
      get { return this; }
    }

    public static pbd::MessageDescriptor Descriptor {
      get { return global::DolphinServer.ProtoEntity.Proto.A1027Response.internal__static_A1027CmdList__Descriptor; }
    }

    protected override pb::FieldAccess.FieldAccessorTable<A1027CmdList, A1027CmdList.Builder> InternalFieldAccessors {
      get { return global::DolphinServer.ProtoEntity.Proto.A1027Response.internal__static_A1027CmdList__FieldAccessorTable; }
    }

    public const int UidFieldNumber = 1;
    private bool hasUid;
    private string uid_ = "";
    public bool HasUid {
      get { return hasUid; }
    }
    public string Uid {
      get { return uid_; }
    }

    public const int ATypeFieldNumber = 2;
    private bool hasAType;
    private int aType_;
    public bool HasAType {
      get { return hasAType; }
    }
    public int AType {
      get { return aType_; }
    }

    public const int CardFieldNumber = 3;
    private bool hasCard;
    private int card_;
    public bool HasCard {
      get { return hasCard; }
    }
    public int Card {
      get { return card_; }
    }

    public const int Card1FieldNumber = 4;
    private bool hasCard1;
    private int card1_;
    public bool HasCard1 {
      get { return hasCard1; }
    }
    public int Card1 {
      get { return card1_; }
    }

    public const int Card2FieldNumber = 5;
    private bool hasCard2;
    private int card2_;
    public bool HasCard2 {
      get { return hasCard2; }
    }
    public int Card2 {
      get { return card2_; }
    }

    public const int HuTypeFieldNumber = 6;
    private bool hasHuType;
    private int huType_;
    public bool HasHuType {
      get { return hasHuType; }
    }
    public int HuType {
      get { return huType_; }
    }

    public override bool IsInitialized {
      get {
        return true;
      }
    }

    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _a1027CmdListFieldNames;
      if (hasUid) {
        output.WriteString(1, field_names[5], Uid);
      }
      if (hasAType) {
        output.WriteInt32(2, field_names[0], AType);
      }
      if (hasCard) {
        output.WriteInt32(3, field_names[1], Card);
      }
      if (hasCard1) {
        output.WriteInt32(4, field_names[2], Card1);
      }
      if (hasCard2) {
        output.WriteInt32(5, field_names[3], Card2);
      }
      if (hasHuType) {
        output.WriteInt32(6, field_names[4], HuType);
      }
      UnknownFields.WriteTo(output);
    }

    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }

    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (hasUid) {
        size += pb::CodedOutputStream.ComputeStringSize(1, Uid);
      }
      if (hasAType) {
        size += pb::CodedOutputStream.ComputeInt32Size(2, AType);
      }
      if (hasCard) {
        size += pb::CodedOutputStream.ComputeInt32Size(3, Card);
      }
      if (hasCard1) {
        size += pb::CodedOutputStream.ComputeInt32Size(4, Card1);
      }
      if (hasCard2) {
        size += pb::CodedOutputStream.ComputeInt32Size(5, Card2);
      }
      if (hasHuType) {
        size += pb::CodedOutputStream.ComputeInt32Size(6, HuType);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static A1027CmdList ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static A1027CmdList ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static A1027CmdList ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static A1027CmdList ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static A1027CmdList ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static A1027CmdList ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static A1027CmdList ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static A1027CmdList ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static A1027CmdList ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static A1027CmdList ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private A1027CmdList MakeReadOnly() {
      return this;
    }

    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(A1027CmdList prototype) {
      return new Builder(prototype);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<A1027CmdList, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(A1027CmdList cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }

      private bool resultIsReadOnly;
      private A1027CmdList result;

      private A1027CmdList PrepareBuilder() {
        if (resultIsReadOnly) {
          A1027CmdList original = result;
          result = new A1027CmdList();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }

      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }

      protected override A1027CmdList MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }

      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }

      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }

      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::DolphinServer.ProtoEntity.A1027CmdList.Descriptor; }
      }

      public override A1027CmdList DefaultInstanceForType {
        get { return global::DolphinServer.ProtoEntity.A1027CmdList.DefaultInstance; }
      }

      public override A1027CmdList BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }

      public override Builder MergeFrom(pb::IMessage other) {
        if (other is A1027CmdList) {
          return MergeFrom((A1027CmdList) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }

      public override Builder MergeFrom(A1027CmdList other) {
        if (other == global::DolphinServer.ProtoEntity.A1027CmdList.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasUid) {
          Uid = other.Uid;
        }
        if (other.HasAType) {
          AType = other.AType;
        }
        if (other.HasCard) {
          Card = other.Card;
        }
        if (other.HasCard1) {
          Card1 = other.Card1;
        }
        if (other.HasCard2) {
          Card2 = other.Card2;
        }
        if (other.HasHuType) {
          HuType = other.HuType;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }

      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }

      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_a1027CmdListFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _a1027CmdListFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              result.hasUid = input.ReadString(ref result.uid_);
              break;
            }
            case 16: {
              result.hasAType = input.ReadInt32(ref result.aType_);
              break;
            }
            case 24: {
              result.hasCard = input.ReadInt32(ref result.card_);
              break;
            }
            case 32: {
              result.hasCard1 = input.ReadInt32(ref result.card1_);
              break;
            }
            case 40: {
              result.hasCard2 = input.ReadInt32(ref result.card2_);
              break;
            }
            case 48: {
              result.hasHuType = input.ReadInt32(ref result.huType_);
              break;
            }
          }
        }

        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }


      public bool HasUid {
        get { return result.hasUid; }
      }
      public string Uid {
        get { return result.Uid; }
        set { SetUid(value); }
      }
      public Builder SetUid(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasUid = true;
        result.uid_ = value;
        return this;
      }
      public Builder ClearUid() {
        PrepareBuilder();
        result.hasUid = false;
        result.uid_ = "";
        return this;
      }

      public bool HasAType {
        get { return result.hasAType; }
      }
      public int AType {
        get { return result.AType; }
        set { SetAType(value); }
      }
      public Builder SetAType(int value) {
        PrepareBuilder();
        result.hasAType = true;
        result.aType_ = value;
        return this;
      }
      public Builder ClearAType() {
        PrepareBuilder();
        result.hasAType = false;
        result.aType_ = 0;
        return this;
      }

      public bool HasCard {
        get { return result.hasCard; }
      }
      public int Card {
        get { return result.Card; }
        set { SetCard(value); }
      }
      public Builder SetCard(int value) {
        PrepareBuilder();
        result.hasCard = true;
        result.card_ = value;
        return this;
      }
      public Builder ClearCard() {
        PrepareBuilder();
        result.hasCard = false;
        result.card_ = 0;
        return this;
      }

      public bool HasCard1 {
        get { return result.hasCard1; }
      }
      public int Card1 {
        get { return result.Card1; }
        set { SetCard1(value); }
      }
      public Builder SetCard1(int value) {
        PrepareBuilder();
        result.hasCard1 = true;
        result.card1_ = value;
        return this;
      }
      public Builder ClearCard1() {
        PrepareBuilder();
        result.hasCard1 = false;
        result.card1_ = 0;
        return this;
      }

      public bool HasCard2 {
        get { return result.hasCard2; }
      }
      public int Card2 {
        get { return result.Card2; }
        set { SetCard2(value); }
      }
      public Builder SetCard2(int value) {
        PrepareBuilder();
        result.hasCard2 = true;
        result.card2_ = value;
        return this;
      }
      public Builder ClearCard2() {
        PrepareBuilder();
        result.hasCard2 = false;
        result.card2_ = 0;
        return this;
      }

      public bool HasHuType {
        get { return result.hasHuType; }
      }
      public int HuType {
        get { return result.HuType; }
        set { SetHuType(value); }
      }
      public Builder SetHuType(int value) {
        PrepareBuilder();
        result.hasHuType = true;
        result.huType_ = value;
        return this;
      }
      public Builder ClearHuType() {
        PrepareBuilder();
        result.hasHuType = false;
        result.huType_ = 0;
        return this;
      }
    }
    static A1027CmdList() {
      object.ReferenceEquals(global::DolphinServer.ProtoEntity.Proto.A1027Response.Descriptor, null);
    }
  }

  #endregion

}

#endregion Designer generated code
